008.精读入坑 React 前没有人会告诉你的事.md

# 内容概要

- React 文件组织规范不统一 工具较多新手不知道怎么组织文件
- React 只关注 View 层, 对数据处理和其桥接层不关注，mobx 和 redux 的选择不明确，选择哪种都需要重新构建脚本或更新 eslint 规则
- mobx 无法保证自己的 store 不被外部更新
- redux 实现同样的功能需要写很多重复的代码，这就是为什么现在很多声音在用 hooks 去代替 redux 的原因(useContext, useReducer)
- 路由问题: React-Router 社区唯一选择， 更新速度快， API 变化更迭快
- JSX 需要嵌套很多无用的 div 和 span
- React 不是渐进式应用框架(Vue - progressive framework) 需要配置很多构建工具和规则才能看到效果

# React 16.0 引入 fiber 架构

# React 和 Vue 之争

- Vue 提供 umd 的引入方式， 与传统 js 开发习惯一致，接受速度快
- React 引入 JSX 并推荐使用， 导致新手觉得门槛高
- React + Mobx 相当于一个复杂的 Vue
- 一个简单的小公司只需要简单的数据流，不需要编译，不会过多的考虑技术选型
- 看中开发效率而不是可维护性

# summary 

- 特定业务场景的权衡，将来会有更好的数据流方案出现，不需要为了哪个好而去撕逼~~
